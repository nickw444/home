automation:
  - id: "1725332898491"
    alias: "tesla charger: reset charging amps at midnight"
    description: ""
    trigger:
      - platform: time_pattern
        hours: "23"
        minutes: "59"
        seconds: "00"
      - platform: time_pattern
        hours: "0"
        minutes: "05"
        seconds: "00"
    condition: []
    action:
      - action: number.set_value
        metadata: {}
        data:
          value: "32"
        target:
          entity_id: number.charging_amps
    mode: single
  - id: "1726456167163"
    alias: "tesla charge: regulate current"
    description: ""
    trigger:
      - platform: state
        entity_id:
          - switch.charger
        from: "off"
        to: "on"
        enabled: false
      - alias: when charge current delta > 5 for 30 seconds
        platform: template
        value_template:
          "{{ (states('sensor.tesla_charge_target_current')|float - states('number.charging_amps')|float)
          | abs > 5}}"
        for:
          hours: 0
          minutes: 0
          seconds: 30
        enabled: false
      - platform: state
        entity_id:
          - input_boolean.tesla_charge_dryrun_enable
        from: "off"
        to: "on"
        enabled: false
      - platform: time_pattern
        minutes: /5
    condition:
      - condition: or
        conditions:
          - condition: state
            entity_id: input_boolean.tesla_charge_dryrun_enable
            state: "on"
          - condition: state
            entity_id: switch.charger
            state: "on"
      - condition: state
        entity_id: device_tracker.location_tracker
        state: home
      - condition: state
        entity_id: binary_sensor.charger
        state: "on"
      - condition: time
        after: 06:00:00
        before: 00:00:00
      - condition: or
        conditions:
          - condition: and
            conditions:
              - condition: state
                entity_id: input_boolean.tesla_charge_dryrun_enable
                state: "on"
              - condition: template
                value_template:
                  "{{ (states('sensor.tesla_charge_target_current')|float
                  - states('input_number.tesla_charge_dryrun_charging_amps')|float) | abs
                  > 1}}"
          - condition: and
            conditions:
              - condition: state
                entity_id: input_boolean.tesla_charge_dryrun_enable
                state: "off"
              - condition: template
                value_template:
                  "{{ (states('sensor.tesla_charge_target_current')|float
                  - states('number.charging_amps')|float) | abs > 1}}"
    action:
      - choose:
          - conditions:
              - condition: state
                entity_id: input_boolean.tesla_charge_dryrun_enable
                state: "on"
            sequence:
              - action: input_number.set_value
                metadata: {}
                data:
                  value: "{{ states('sensor.tesla_charge_target_current') }}"
                target:
                  entity_id: input_number.tesla_charge_dryrun_charging_amps
              - action: counter.increment
                metadata: {}
                data: {}
                target:
                  entity_id: counter.tesla_charge_dryrun_change_count
        default:
          - action: number.set_value
            metadata: {}
            data:
              value: "{{ states('sensor.tesla_charge_target_current') }}"
            target:
              entity_id: number.charging_amps
      - delay:
          hours: 0
          minutes: 5
          seconds: 0
          milliseconds: 0
        enabled: false
    mode: queued
    max: 5
  - id: "1726525636717"
    alias: "tesla charge: override when close to import"
    description: ""
    trigger:
      - platform: numeric_state
        entity_id:
          - sensor.inverter_meter_power
        for:
          hours: 0
          minutes: 0
          seconds: 30
        above: -600
        enabled: true
      - platform: numeric_state
        entity_id:
          - sensor.inverter_meter_power
        for:
          hours: 0
          minutes: 0
          seconds: 5
        above: -200
        enabled: true
    condition:
      - condition: or
        conditions:
          - condition: state
            entity_id: input_boolean.tesla_charge_dryrun_enable
            state: "on"
          - condition: state
            entity_id: switch.charger
            state: "on"
      - condition: state
        entity_id: device_tracker.location_tracker
        state: home
      - condition: state
        entity_id: binary_sensor.charger
        state: "on"
      - condition: time
        after: 06:00:00
        before: 00:00:00
      - condition: or
        conditions:
          - condition: and
            conditions:
              - condition: state
                entity_id: input_boolean.tesla_charge_dryrun_enable
                state: "on"
              - condition: template
                value_template:
                  "{{ (states('sensor.tesla_charge_target_current')|float
                  - states('input_number.tesla_charge_dryrun_charging_amps')|float) | abs
                  > 0}}"
          - condition: and
            conditions:
              - condition: state
                entity_id: input_boolean.tesla_charge_dryrun_enable
                state: "off"
              - condition: template
                value_template:
                  "{{ (states('sensor.tesla_charge_target_current')|float
                  - states('number.charging_amps')|float) | abs > 0}}"
    action:
      - choose:
          - conditions:
              - condition: state
                entity_id: input_boolean.tesla_charge_dryrun_enable
                state: "on"
            sequence:
              - action: input_number.set_value
                metadata: {}
                data:
                  value: "{{ states('sensor.tesla_charge_target_current') }}"
                target:
                  entity_id: input_number.tesla_charge_dryrun_charging_amps
              - action: counter.increment
                metadata: {}
                data: {}
                target:
                  entity_id: counter.tesla_charge_dryrun_change_count
        default:
          - action: number.set_value
            metadata: {}
            data:
              value: "{{ states('sensor.tesla_charge_target_current') }}"
            target:
              entity_id: number.charging_amps
    mode: queued
    max: 5
