id: "1634189664661"
alias: "robot_vacuum: start cleaning whilst away"
description: ""
trigger:
  - platform: state
    entity_id:
      - device_tracker.kates_iphone_gps
      - device_tracker.nicks_iphone_gps
    to: Dog Park
    for: "00:05:00"
    id: "zone_dog_park"
  - platform: numeric_state
    entity_id: proximity.home
    above: "2"
    for: "00:05:00"
    id: proximity
condition:
  # Debounce for 2 hours
  - condition: template
    value_template: >-
      {%- if state_attr('automation.robot_vacuum_start_cleaning_whilst_away','last_triggered') == None %}
        True
      {%- else %}
        {{ (now() - state_attr('automation.robot_vacuum_start_cleaning_whilst_away','last_triggered')).total_seconds() > 60 * 60 * 2 }}
      {%- endif %}
  # Don't clean if already cleaning
  - condition: state
    entity_id: vacuum.osmo
    state: idle
  # Don't clean if away mode activated
  - condition: state
    entity_id: input_boolean.away_mode
    state: "off"
  - condition: or
    conditions:
      # Don't check Evie's presence if dog park zone triggered automation.
      # Otherwise (or), ensure Evie is not home.
      - condition: trigger
        id: "zone_dog_park"
      - condition: state
        entity_id: binary_sensor.evie
        state: "off"
action:
  # Don't clean if there is presence, wait for 15 minutes for not-home
  # state (or continue immediately if already not home)
  # TODO(NW): This might be able to be removed as GPS proximity is probably
  #  good enough
  - choose:
      - conditions:
          - condition: state
            entity_id: group.all_people
            state: "home"
        sequence:
          - wait_for_trigger:
              - platform: state
                entity_id: group.all_people
                to: not_home
            timeout: "00:15:00"
            continue_on_timeout: false
  - alias: Set up variables for the actions
    variables:
      action_cancel: "{{ 'CANCEL_' ~ context.id }}"
      action_start_now_tiles: "{{ 'START_NOW_TILES_' ~ context.id }}"
      action_start_now_all: "{{ 'START_NOW_ALL_' ~ context.id }}"
  - service: notify.everyone
    data:
      title: Osmo
      message: Starting automated cleaning in 5 minutes
      data:
        tag: osmo-no-one-home
        actions:
          - action: "{{ action_cancel }}"
            title: Cancel
          - action: "{{ action_start_now_tiles }}"
            title: Clean Tiles Only
          - action: "{{ action_start_now_all }}"
            title: Clean All
  - alias: Wait for a response
    wait_for_trigger:
      - platform: event
        event_type: mobile_app_notification_action
        event_data:
          action: "{{ action_cancel }}"
      - platform: event
        event_type: mobile_app_notification_action
        event_data:
          action: "{{ action_start_now_tiles }}"
      - platform: event
        event_type: mobile_app_notification_action
        event_data:
          action: "{{ action_start_now_all }}"
    timeout: "00:05:00"
  - choose:
      - conditions:
          - condition: template
            value_template: "{{ wait.trigger.event.data.action == action_cancel }}"
        sequence: []
      - conditions:
          - condition: template
            value_template: "{{ wait.trigger.event.data.action == action_start_now_tiles }}"
        sequence:
          - service: script.turn_on
            target:
              entity_id: script.osmo_clean_tiled_areas
    default:
      - service: script.turn_on
        target:
          entity_id: script.osmo_clean_all_areas
mode: single
